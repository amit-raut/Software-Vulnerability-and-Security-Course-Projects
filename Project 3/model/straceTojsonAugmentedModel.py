####### straceTojsonAugmentedModel.py #######

__author__ = 'AR'
import json, string, sys
from collections import OrderedDict


#print "########## StraceToJson #########"
syscalls = []
args = []
resultingList = []
sysdict = OrderedDict()

if sys.argv < 2:
    print "Usage: Please specify strace file as an argument."
    sys.exit()

with open(sys.argv[1], "r") as f:
    for line in f:
        if string.ascii_lowercase.__contains__(line[6]) or string.ascii_uppercase.__contains__(line[6]):
            if line.__contains__("\""):
                start_index = line.find("\"")
                final_index = line.find("\"", start_index + 1)
                comma_index = line.find(",")
                slash_first_index = line.find("/")
                slash_second_index = line.find("/", slash_first_index + 1)
                slash_third_index = line.find("/", slash_second_index + 1)
                if start_index and final_index and start_index < comma_index:
                    if slash_third_index != -1 and slash_third_index < comma_index:
                        args1 = line[slash_first_index: slash_third_index + 1]
                        args.append(args1)

                    elif slash_second_index != -1 and slash_second_index < comma_index:
                            args1 = line[slash_first_index:slash_second_index + 1]
                            args.append(args1)
                    else:
                        args1 = line[start_index + 1:final_index]
                        args.append(args1)
                else:
                    args.append("null")
            else:
                args.append("null")


            index = line.find("(")
            if index:
                syscall = line[6:index]
                syscalls.append(syscall)


for n in range(syscalls.__len__() - 2):
    sysdict.update({ "syscall_1":syscalls[n], "syscall_2":syscalls[n + 1], "syscall_1_arg":args[n], "syscall_2_arg":args[n + 1] })
    print json.dumps(sysdict, ensure_ascii=False, indent=4, separators=(',', ': '))


f.close()
